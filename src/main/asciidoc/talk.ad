= Neues von Spring Data
:revealjs_customtheme: theme/schauderhaft.css
:icons: font
:twitter-tag: @jensschauder
:conference-tag: #javaland
:talk-tag: #spring-data-news
:slide-link: http://to-be-defined
:linkattrs:

include::footer.ad[]

== What is Spring Data?

Someone dragged me in here.

== Old new or new new?

=== Not new

Ingalls: (1.11.x) - still gets bug fixes.

Used by Spring Boot 1.5.x

=== Somewhat new

Kay: (2.0.x) - 1st GA (Oct. 2017) - current: 2.0.5

Used by Spring Boot 2.0 (Feb. 2018)

=== Super new

Lovelace: (2.1.x) - current: 2.1.0.M1 - (ETA: June 2018)

== Kay

=== Upgrade to Java 8.

* Java 8 is required.

* Use of new language features (Closures).

* Use of new classes (Optional, java.time API).

=== New `CrudRepository` interface

* `findOne` -> `findById`.

* methods return `Optional`.

* id doesn't have to be serializable.

```
interface CrudRepository<T, ID> extends Repository<T, ID> {
    S save(S entity);
    Iterable<S> saveAll(Iterable<S> entities)
    Optional<T> findById(ID id);
    boolean existsById(ID id);
    Iterable<T> findAllById(Iterable<ID> ids);
    void deleteById(ID id);
    void delete(T entity);
    void deleteAll(Iterable<? extends T> entities);
}
```

=== Tooling support for null-safety

via Spring's `@NonNullApi` and `@Nullable` annotations.

=== Java 9 compatibility.

* Spring Data works with Java 9.

* No module descriptors yet.

* You might need `--add-modules java.xml.bind`

* Building Spring Data still requires `--permit-illegal-access`

=== Support composable repositories.

Multiple "fragments" implementing some methods get combined into a repository.

Greater flexibility internally.

More then one custom implementation class.

See https://github.com/spring-projects/spring-data-examples/commit/5c01c4413085c37cb1f66ff9dce6bcbb2d2245e9

and https://spring.io/blog/2017/06/20/a-preview-on-spring-data-kay#composable-repositories

=== Fluent MongoOperations

```
Query query = new BasicQuery(new Document());
List<SWCharacter> all = ops.find(query, SWCharacter.class, "star-wars");
```

Using FluentMongoOperations this above can be expressed as

```
List<SWCharacter> all = ops.find(SWCharacter.class)
  .inCollection("star-wars")
  .all();
```

=== Upgrade to Spring Framework 5.

The important part is the reactive support

=== Reactive support for MongoDB, Redis, Couchbase, and Apache Cassandra.

* `@EnableReactive???Repositories`

* extend `ReactiveCrudRepository`

* declare methods returning `Flux`, `Mono`

```
  @GetMapping("/people")
  Flux<String> namesByLastname(@RequestParam Mono<String> lastname) {

    Flux<Person> result = repository.findByLastname(lastname);
    return result.map(it -> it.getFullName());
  }
```

== Ingalls

include::self.ad[]
